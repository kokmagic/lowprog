[Initial Orders 2]
[44] P 48 F [96]
[start:]
[45] A 44 F [acc = 96]
[46] T 200 F [в ячейку 200 = 96]
[47] E 92 F [jump to startC]
[return:]
[48] Z 0 F [Конец]
GK [sub]
[const1:]
[0] P 0 D [1]
[const2:]
[1] P 1 F [2]
[current:]
[2] P 125 F [250]
[n:]
[3] P 1 D [разрядность кода грея]
[p:]
[4] P 1 F [cчетчик количества уже имеющихся кодов]
[t:]
[5] P 0 F [показывает количество кодов в (a−1)-м коде Грея]
[j:]
[6] P 0 F [счётчик по j по n для цикла отзеркаливания]
[k:]
[7] P 0 F [счётчик по p]
[clean:]
[8] P 0 F [trash]
[ONE:]
[9] P 1 F [1]
[i:]
[10] P 0 D [счётчик по n]
[set:]
[11] T 0 F [T0F]
[get:]
[12] A 0 F [A0F]
[exit:]
[13] E 0 F [E0F]
[clone:]
[14] T 8 @ [clean]
[15] A 6 @ [acc = j]
[16] S 3 @ [acc = j - n]
[17] E 78 @ [проверка если j = n переходим в endC]
[18] T 8 @ [clean]
[19] H 7 @ [скопировали k в умножитель]
[20] V 3 @ [acc = k * n]
[21] L 2 F [сдвиг на четыре]
[22] L 0 F
[23] A 2 @ [acc = 250 + acc]
[24] A 6 @ [acc = acc + j]
[25] L 0 D [acc *= 2]
[26] A 11 @ [acc += T0S]
[27] T 38 @ [инит put1]
[28] H 5 @ [в умножитель t]
[29] V 3 @ [acc = n * t]
[30] L 2 F [acc *= 16]
[31] L 0 F
[32] A 2 @ [acc += current]
[33] A 6 @ [acc += j]
[34] L 0 D [acc *= 2]
[35] A 12 @ [acc += A0S]
[36] T 37 @ [инит get1]
[get1:]
[37] A 0 F
[put1:]
[38] T 0 F [записываем 0 или 1]
[39] A @ [acc = 1]
[40] A 6 @ [acc = 1 + j]
[41] T 6 @ [j = 1 + j]
[42] E 14 @ [jump to clone]
[startC:]
[43] A 2 @ [acc = current]
[44] L 0 D [сдвиг на 1]
[45] A 47 @ [init set1]
[46] T 47 @ [init set1]
[set1:]
[47] T 0 F [загузили в 250 ячейку 0]
[48] A 2 @ [взять current]
[49] A 3 @ [current + n]
[50] L 0 D [сдвиг на 1]
[51] A 54 @ [инициализация set2]
[52] T 54 @ [инициализация set2]
[53] A 0 @ [acc = 1]
[set2:]
[54] T 0 F [T (current + n) F]
[55] A 1 @ [acc = 2]
[56] T 4 @ [записали в p]
[for:]
[57] T 8 @ [clena]
[58] A 10 @ [взяли i]
[59] S 3 @ [acc = i - n]
[60] E 112 @ [проверка если i - n >= 0 jump to endfor]
[61] T 8 @ [clena]
[62] A 4 @ [acc = p]
[63] S 0 @ [acc = p - 1]
[64] T 5 @ [t = p - 1]
[65] A 4 @ [acc = p]
[66] T 7 @ [k = p]
[67] H 1 @ [скопировали 2 в умножитель]
[68] V 4 @ [acc = 2 * p]
[69] L 2 F [acc = 16 * (2 * p)]
[70] L 0 F
[71] T 4 @ [p = acc]
[fork:]
[72] T 8 @ [clena]
[73] A 7 @ [acc = k]
[74] S 4 @ [acc = k - p]
[75] E 108 @ [проверка если k - p >= 0 конец цикла]
[76] T 8 @ [clena]
[77] E 14 @ [jump to clone]
[endC:]
[78] T 8 @ [clean]
[79] T 6 @ [j = 0]
[80] H 5 @ [в умножитель t]
[81] V 3 @ [acc = t * n]
[82] L 2 F [acc *= 16]
[83] L 0 F
[84] A 2 @ [acc += 250]
[85] A 10 @ [acc += i]
[86] L 0 D [acc *= 2]
[87] A 11 @ [acc += T0S]
[88] T 89 @ [init set3]
[set3:] 
[89] T 0 F [записали в нужную ячейку 0]
[90] H 7 @ [в умножитель k]
[91] V 3 @ [acc = k * n]
[92] L 2 F [acc *= 16]
[93] L 0 F 
[94] A 2 @ [acc += 250]
[95] A 10 @ [acc += i]
[96] L 0 D [acc *= 2]
[97] A 11 @ [acc += T0S]
[98] T 100 @ [init set4]
[99] A 0 @ [acc = 1]
[set4:]
[100] T 0 F [записали в нужную ячейку 1]
[101] A 5 @ [acc = t]
[102] S 0 @ [acc = t - 1]
[103] T 5 @ [t = t - 1]
[104] A 7 @ [acc = k]
[105] A 0 @ [acc = k + 1]
[106] T 7 @ [k = k + 1]
[107] E 72 @ [jump to fork]
[endfork:]
[108] A 10 @ [acc = k - p + i]
[109] A 0 @ [acc += 1]
[110] T 10 @ [i = acc]
[111] E 57 @ [jump to for]
[endfor:]
[112] T 8 @ [clean]
[113] A 200 F [acc = 96]
[114] A 13 @ [acc += E0F]
[115] T 116 @ [init exit]
[exitT:]
[116] P 0 F [E45F]
[117] E 45 K
[118] P 0 F