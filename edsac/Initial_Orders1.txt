[Initial Orders 1]
[зеркальный двоичный код Грея]
 [31] T 145 F
 [32] E 46 S [переходим в начало программы]
[const1:]
 [33] P 0 L
[const2:]
 [34] P 1 S
[current:]
 [35] P 125 S [вывод с 250]
[n:]
 [36] P 1 L [разрядность кода грея]
[p:]
 [37] P 1 S [cчетчик количества уже имеющихся кодов]
[t:]
 [38] P 0 S [показывает количество кодов в (a−1)-м коде Грея]
[j:]
 [39] P 0 S [счётчик j по n для цикла отзеркаливания]
[k:]
 [40] P 0 S [счётчик по p]
[clean:]
 [41] P 0 S [trash]
[ONE:]
 [42] P 1 S [1]
[i:]
 [43] P 0 L [счётчик по n]
[set:]
 [44] T 0 S
[get:]
 [45] A 0 S
[startC:]
 [46] A 35 S [взять current]
 [47] L 0 L [сдвиг на 1]
 [48] A 50 S [инициализация set1]
 [49] T 50 S [инициализация set1]
[set1:]
 [50] T 0 S [загузили в 250 ячейку 0]
 [51] A 35 S [взять current]
 [52] A 36 S [current + n]
 [53] L 0 L [сдвиг на 1]
 [54] A 57 S [инициализация set2]
 [55] T 57 S [инициализация set2]
 [56] A 33 S [взяли 1]
[set2:]
 [57] T 0 S [T (current + n)]
 [58] A 34 S [добавили 2]
 [59] T 37 S [записали в p]
[for:]
 [60] T 41 S [clena]
 [61] A 43 S [взяли i]
 [62] S 36 S [acc = i - n]
 [63] E 115 S [проверка если i - n >= 0 jump to endfor]
 [64] T 41 S [clena]
 [65] A 37 S [acc = p]
 [66] S 33 S [acc = p - 1]
 [67] T 38 S [t = p - 1]
 [68] A 37 S [acc = p]
 [69] T 40 S [k = p]
 [70] H 34 S [скопировали 2 в умножитель]
 [71] V 37 S [acc = 2 * p]
 [72] L 2 S [acc = 16 * (2 * p)]
 [73] L 0 S
 [74] T 37 S [p = acc]
[fork:]
 [75] T 41 S [clena]
 [76] A 40 S [acc = k]
 [77] S 37 S [acc = k - p]
 [78] E 111 S [проверка если k - p >= 0 конец цикла]
 [79] T 41 S [clena]
 [80] E 116 S [jump to clone]
 [endC:]
 [81] T 41 S [clean]
 [82] T 39 S [j = 0]
 [83] H 38 S [в умножитель t]
 [84] V 36 S [acc = t * n]
 [85] L 2 S  [acc *= 16]
 [86] L 0 S
 [87] A 35 S [acc += 250]
 [88] A 43 S [acc += i]
 [89] L 0 L   [acc *= 2]
 [90] A 44 S [acc += T0S]
 [91] T 92 S [init set3]
[set3:]
 [92] T 0 S [записали в нужную ячейку 0]
 [93] H 40 S [в умножитель k]
 [94] V 36 S [acc = k * n]
 [95] L 2 S [acc *= 16]
 [96] L 0 S 
 [97] A 35 S [acc += 250]
 [98] A 43 S [acc += i]
 [99] L 0 L [acc *= 2]
 [100] A 44 S [acc += T0S]
 [101] T 103 S [init set4]
 [102] A 33 S [acc = 1]
[set4:]
 [103] T 0 S [записали в нужную ячейку 1]
 [104] A 38 S [acc = t]
 [105] S 33 S [acc = t - 1]
 [106] T 38 S [t = t - 1]
 [107] A 40 S [acc = k]
 [108] A 33 S [acc = k + 1]
 [109] T 40 S [k = k + 1]
 [110] E 75 S [jump to fork]
[endfork:]
 [111] A 43 S [acc = k - p + i]
 [112] A 33 S [acc += 1]
 [113] T 43 S [i = acc]
 [114] E 60 S [jump to for]
[endfor:]
 [115] Z 0 S [end of programm]
[clone:]
 [116] T 41 S [clean]
 [117] A 39 S [acc = j]
 [118] S 36 S [acc = j - n]
 [119] E 81 S [проверка если j = n переходим в endC]
 [120] T 41 S [clean]
 [121] H 40 S [скопировали k в умножитель]
 [122] V 36 S [acc = k * n]
 [123] L 2 S [сдвиг на четыре]
 [124] L 0 S
 [125] A 35 S [acc = 250 + acc]
 [126] A 39 S [acc = acc + j]
 [127] L 0 L [acc *= 2]
 [128] A 44 S [acc += T0S]
 [129] T 140 S [инит put1]
 [130] H 38 S [в умножитель t]
 [131] V 36 S [acc = n * t]
 [132] L 2 S [acc *= 16]
 [133] L 0 S
 [134] A 35 S [acc += current]
 [135] A 39 S [acc += j]
 [136] L 0 L [acc *= 2]
 [137] A 45 S [acc += A0S]
 [138] T 139 S [инит get1]
[get1:]
 [139] A 0 S
[put1:]
 [140] T 0 S [загрузили либо 1, либо 0]
 [141] A 33 S [acc = 1]
 [142] A 39 S [acc = 1 + j]
 [143] T 39 S [j = 1 + j]
 [144] E 116 S [jump to clone]